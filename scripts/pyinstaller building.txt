Edit the Spec File
Open VolumetricPlotter.spec in a text editor. You need to tell pyinstaller where to find the config.json file and include other hidden packages that Dash uses. Modify your spec file to look like this:




# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(['app.py'],
             pathex=['C:\\path\\to\\your\\project\\volumetric_plotter_project'], # IMPORTANT: Use the absolute path to your project folder
             binaries=[],
             datas=[('config.json', '.')],  # Tells PyInstaller to include config.json
             hiddenimports=[
                'pkg_resources.py2_warn',
                'dash_bootstrap_components._components',
                'plotly.express'
             ], # Helps PyInstaller find packages Dash loads dynamically
             hookspath=[],
             runtime_hooks=[],
             excludes=[],
             win_no_prefer_redirects=False,
             win_private_assemblies=False,
             cipher=block_cipher,
             noarchive=False)
pyz = PYZ(a.pure, a.zipped_data,
             cipher=block_cipher)
exe = EXE(pyz,
          a.scripts,
          a.binaries,
          a.zipfiles,
          a.datas,
          [],
          name='VolumetricPlotter',
          debug=False,
          bootloader_ignore_signals=False,
          strip=False,
          upx=True,
          upx_exclude=[],
          runtime_tmpdir=None,
          console=False, # Should be False if using --windowed
          icon=None) # You can add a path to an .ico file here



Step 3: Build from the Spec File
Now, run pyinstaller again, but this time point it to your modified .spec file.
code
Bash
pyinstaller VolumetricPlotter.spec