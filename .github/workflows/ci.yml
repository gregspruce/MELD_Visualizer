name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  resolve-suite:
    name: Resolve test suite
    runs-on: ubuntu-latest
    outputs:
      suite: ${{ steps.read.outputs.suite }}
      run_unit: ${{ steps.read.outputs.run_unit }}
      run_e2e: ${{ steps.read.outputs.run_e2e }}
      run_both: ${{ steps.read.outputs.run_both }}
      run_none: ${{ steps.read.outputs.run_none }}
    steps:
      - uses: actions/checkout@v4
      - id: read
        run: |
          set -euo pipefail
          SUITE="unit"
          if [ -f tests/test_suite.conf ]; then
            SUITE="$(grep -E '^[[:space:]]*[^#]+' tests/test_suite.conf | head -n1 | awk '{print $1}')"
            SUITE="${SUITE:-unit}"
          fi
          echo "suite=$SUITE" >> "$GITHUB_OUTPUT"
          case "$SUITE" in
            unit)  echo "run_unit=true" >> "$GITHUB_OUTPUT"; echo "run_e2e=false" >> "$GITHUB_OUTPUT"; echo "run_both=false" >> "$GITHUB_OUTPUT"; echo "run_none=false" >> "$GITHUB_OUTPUT" ;;
            e2e)   echo "run_unit=false" >> "$GITHUB_OUTPUT"; echo "run_e2e=true"  >> "$GITHUB_OUTPUT"; echo "run_both=false" >> "$GITHUB_OUTPUT"; echo "run_none=false" >> "$GITHUB_OUTPUT" ;;
            both)  echo "run_unit=false" >> "$GITHUB_OUTPUT"; echo "run_e2e=false" >> "$GITHUB_OUTPUT"; echo "run_both=true"  >> "$GITHUB_OUTPUT"; echo "run_none=false" >> "$GITHUB_OUTPUT" ;;
            none)  echo "run_unit=false" >> "$GITHUB_OUTPUT"; echo "run_e2e=false" >> "$GITHUB_OUTPUT"; echo "run_both=false" >> "$GITHUB_OUTPUT"; echo "run_none=true"  >> "$GITHUB_OUTPUT" ;;
            *)     echo "Unknown suite '$SUITE'"; exit 2 ;;
          esac

  unit-tests:
    name: Unit tests
    needs: resolve-suite
    if: ${{ needs.resolve-suite.outputs.run_unit == 'true' || needs.resolve-suite.outputs.run_both == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - name: Run unit tests
        env:
          PYTEST_DISABLE_PLUGIN_AUTOLOAD: "1"
        run: pytest -q -m "not e2e"

  e2e-tests:
    name: E2E tests (Chrome)
    needs: resolve-suite
    if: ${{ needs.resolve-suite.outputs.run_e2e == 'true' || needs.resolve-suite.outputs.run_both == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Install Google Chrome
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y wget gnupg ca-certificates
          if [ ! -f /etc/apt/sources.list.d/google-chrome.list ]; then
            wget -qO- https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome-keyring.gpg
            echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" |               sudo tee /etc/apt/sources.list.d/google-chrome.list >/dev/null
            sudo apt-get update
          fi
          sudo apt-get install -y google-chrome-stable
          (google-chrome --version || google-chrome-stable --version) || true
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - name: Run E2E tests
        env:
          PYTEST_DISABLE_PLUGIN_AUTOLOAD: "1"
        run: |
          export CHROME_BIN="$(command -v google-chrome || command -v google-chrome-stable || true)"
          pytest -q -m "e2e"
